[project]
name = "pissgraph-backend"
version = "0.1.0"
description = "ISS urine tank telemetry backend API"
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "aiosqlite>=0.19.0",
    "aiofiles>=23.2.1",
    "aiohttp>=3.9.0",
    "lightstreamer-client-lib>=2.0.0",
    "python-dotenv>=1.0.0",
    "asyncio-mqtt>=0.16.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["pissgraph"]

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # ruff-specific rules
    "N",    # pep8-naming
    "S",    # bandit
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
]
ignore = [
    "S101",  # assert-used (we use asserts in tests)
    "S104",  # hardcoded-bind-all-interfaces (we bind to 0.0.0.0 in containers)
    "S311",  # random-used (we use random for seed data)
    "T201",  # print-used (we use print in export script)
    "B008",  # function-call-in-default-argument (FastAPI Query pattern)
    "B007",  # unused-loop-control-variable (acceptable in wait loops)
    "N802",  # invalid-function-name (Lightstreamer API uses camelCase)
    "SIM102", # collapsible-if (sometimes clearer to have separate conditions)
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "T20"]

[tool.ruff.lint.isort]
combine-as-imports = false
force-single-line = true

# MyPy configuration
[tool.mypy]
python_version = "3.12"
strict = false
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "lightstreamer.client"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "asyncio_mqtt"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fastapi.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "uvicorn.*"
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.uv]
dev-dependencies = [
    "mypy>=1.8.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "ruff>=0.1.9",
    "pre-commit>=3.6.0",
    "types-aiofiles>=23.2.0",
    "types-requests>=2.31.0",
]
